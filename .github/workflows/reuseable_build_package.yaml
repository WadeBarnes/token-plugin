name: "Build Token Plugin Package"

on:
  workflow_call:
    inputs:
      GITHUB_REPOSITORY_NAME:
        required: true
        type: string
      UBUNTU_VERSION:
        required: true
        type: string
      isDev:
        required: false
        default: true
        type: boolean

jobs:
  timestamp:
    name: Get timestamp
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
    steps:
      - id: timestamp
        run: |
          export timestamp=$(date +%s)
          echo "timestamp=$timestamp" >> $GITHUB_OUTPUT
          echo "::group::DEBUG"
          echo "timestamp=$timestamp"
          echo "::endgroup::"

  build_token_plugin_release:
    name: Token Plugin Build Packages
    needs: timestamp
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/${{ inputs.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ inputs.UBUNTU_VERSION }}
    steps:
      - name: adding github workspace as safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set Version with UX-timestamp
        if: ${{ inputs.isDev }}
        run: python3 updateVersion.py --timestamp ${{ needs.timestamp.outputs.timestamp }}
      - name: Get current Version
        id: version
        run: |
          version=$(python3 updateVersion.py --getVersion)
          debVersion=$(echo $version | sed -r 's/-/~/g')
          echo "debVersion=$debVersion">>$GITHUB_OUTPUT
      - name: Get indy-node version to depend on
        id: node-version
        shell: bash
        run: |
          version=$(grep -oP "\d+.\d+.\d+((-|.)?rc\d+)?" <<< $(grep -oP "indy-node==\d+.\d+.\d+((-|.)?rc\d+)?" sovtoken/setup.py) || true)
          echo $version > indy-node-version.txt
          echo "nodeVersion=$(sed 's/\./\~/3' indy-node-version.txt)" >> $GITHUB_OUTPUT
      - name: Build Token Plugin deployment package
        run: |
          mkdir -p /tmp/build-output

          # Build the sovtoken package
          fpm  \
            --input-type python \
            --output-type deb \
            --name sovtoken \
            --version ${{ steps.version.outputs.debVersion }} \
            --depends "indy-node(=${{ steps.node-version.outputs.nodeVersion }})" \
            --architecture amd64 \
            --maintainer "Sovrin" \
            --verbose \
            --no-python-dependencies \
            --no-python-fix-name \
            --python-bin "/usr/bin/python3" \
            --no-python-fix-dependencies \
            --exclude "*.pyc" \
            --exclude "*.pyo" \
            --after-install ./devops/build-scripts/focal/sovtoken/postinst \
            --before-remove ./devops/build-scripts/focal/sovtoken/prerm \
            --force  \
            sovtoken/

          # Build the sovtokenfees package
          fpm  \
            --input-type python \
            --output-type deb \
            --name sovtokenfees \
            --version ${{ steps.version.outputs.debVersion }} \
            --architecture amd64 \
            --maintainer "Sovrin" \
            --verbose \
            --no-python-fix-name  \
            --python-bin "/usr/bin/python3" \
            --no-python-fix-dependencies \
            --exclude "*.pyc" \
            --exclude "*.pyo" \
            --after-install ./devops/build-scripts/focal/sovtokenfees/postinst \
            --before-remove ./devops/build-scripts/focal/sovtokenfees/prerm \
            --force  \
            sovtokenfees/

          mv ./*.deb /tmp/build-output
      - name: Upload sovtoken-deb
        uses: actions/upload-artifact@v3
        with:
          name: sovtoken-deb
          path: /tmp/build-output/sovtoken_*.deb
      - name: Upload sovtokenfees-deb
        uses: actions/upload-artifact@v3
        with:
          name: sovtokenfees-deb
          path: /tmp/build-output/sovtokenfees_*.deb

  build_sovtoken_pypi:
    name: sovtoken Build Package
    runs-on: ubuntu-20.04
    needs: timestamp
    container:
      image: ghcr.io/${{ inputs.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ inputs.UBUNTU_VERSION }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set Version with UX-timestamp
        if: ${{ inputs.isDev }}
        run: python3 updateVersion.py --timestamp ${{ needs.timestamp.outputs.timestamp }}
      - name: Build python sovtoken package
        run: python3 sovtoken/setup.py sdist --dist-dir /tmp/dist bdist_wheel --dist-dir /tmp/dist
      - uses: actions/upload-artifact@v3
        with:
          name: sovtoken-python
          path: /tmp/dist
          retention-days: 5

  build_sovtokenfees_pypi:
    name: sovtokenfees Build Packages
    runs-on: ubuntu-20.04
    needs: timestamp
    container:
      image: ghcr.io/${{ inputs.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ inputs.UBUNTU_VERSION }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set Version with UX-timestamp
        if: ${{ inputs.isDev }}
        run: python3 updateVersion.py --timestamp ${{ needs.timestamp.outputs.timestamp }}
      - name: Build python sovtokenfees package
        run: python3 sovtokenfees/setup.py sdist --dist-dir /tmp/dist bdist_wheel --dist-dir /tmp/dist
      - uses: actions/upload-artifact@v3
        with:
          name: sovtokenfees-python
          path: /tmp/dist
          retention-days: 5